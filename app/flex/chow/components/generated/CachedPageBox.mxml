<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" label="CachedPage"
  xmlns:rx="org.restfulx.components.rx.*">
  <mx:Script><![CDATA[
    import org.restfulx.Rx;
    import org.restfulx.utils.RxUtils;
    import chow.models.CachedPage;

    [Bindable]
    private var cachedPage:CachedPage = new CachedPage();

    private function newCachedPage():void {
      cachedPage = new CachedPage();
      cachedPagesList.selectedIndex = -1;
    }

    private function saveCachedPage():void {
      updateModelProperties();
      if (cachedPage.id) {
        cachedPage.update({onSuccess: onCachedPageUpdate});
      } else {
        cachedPage.create({onSuccess: onCachedPageCreate});
      }
    }
  
    private function updateModelProperties():void {
      cachedPage.url = urlTextInput.text;
      cachedPage.references = referencesTextArea.text;
      cachedPage.updatedAt = updatedAtDateTimeTextInput.date;
      cachedPage.siteId = int(siteIdTextInput.text);
      cachedPage.clearedAt = clearedAtDateTimeTextInput.date;
  
    }
   
    private function destroyCachedPage():void {
      cachedPage.destroy({onSuccess: onCachedPageDestroy});
    }
    
    private function onCachedPageSelect():void {
      cachedPage = RxUtils.clone(cachedPagesList.selectedItem) as CachedPage;
    }
    
    private function onCachedPageCreate(result:CachedPage):void {
      cachedPage = new CachedPage;
    }
    
    private function onCachedPageUpdate(result:CachedPage):void {
      cachedPagesList.selectedItem = result;
      onCachedPageSelect();
    }
    
    private function onCachedPageDestroy(result:CachedPage):void {
      onCachedPageCreate(result);
    }    
  ]]></mx:Script>
  <mx:Panel id="cachedPagesPanel"
    title="CachedPages" cornerRadius="0" dropShadowEnabled="false" borderStyle="solid"
    borderThickness="1" backgroundColor="#EEEEEE" width="25%" height="100%">
    <mx:List id="cachedPagesList"
      width="100%" height="100%"
      dataProvider="{Rx.models.index(CachedPage)}"
      change="onCachedPageSelect()"/>
    <mx:ControlBar width="100%">
      <mx:Button label="New CachedPage" width="100%" height="30"
        click="newCachedPage()"/>
    </mx:ControlBar>
  </mx:Panel>
  <mx:Panel title="Edit CachedPage" cornerRadius="0" dropShadowEnabled="false" borderStyle="solid"
    borderThickness="1" backgroundColor="#EEEEEE" width="75%" height="100%">
    <mx:Form width="100%" height="100%">
      <mx:FormItem label="Url" width="100%">
        <mx:TextInput id="urlTextInput" width="100%" text="{cachedPage.url}"/>
      </mx:FormItem>
      <mx:FormItem label="References" width="100%">
        <mx:TextArea id="referencesTextArea" width="100%" height="200" text="{cachedPage.references}"/>
      </mx:FormItem>
      <mx:FormItem label="UpdatedAt" width="100%">
        <rx:DateTimeTextInput id="updatedAtDateTimeTextInput" width="200" date="{cachedPage.updatedAt}"/>
      </mx:FormItem>
      <mx:FormItem label="SiteId" width="100%">
        <mx:TextInput id="siteIdTextInput" width="100%" text="{cachedPage.siteId}"/>
      </mx:FormItem>
      <mx:FormItem label="ClearedAt" width="100%">
        <rx:DateTimeTextInput id="clearedAtDateTimeTextInput" width="200" date="{cachedPage.clearedAt}"/>
      </mx:FormItem>
    </mx:Form>
    <mx:ControlBar width="100%">
      <mx:Button label="Save CachedPage" width="50%" height="30"
        click="saveCachedPage()"/>
      <mx:Button label="Delete CachedPage" width="50%" height="30"
        enabled="{RxUtils.canDeleteModel(cachedPage)}"
        click="destroyCachedPage()"/>
    </mx:ControlBar>
  </mx:Panel>
</mx:HBox>